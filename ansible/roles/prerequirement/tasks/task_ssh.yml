- name: Local add /etc/hosts
  connection: local
  lineinfile:
    dest: /etc/hosts
    line: "{{ item.ip }} {{ item.hostname }}"
  with_items:
    - { ip: "192.168.56.10", hostname: "k8s-controller" }
    - { ip: "192.168.56.11", hostname: "k8s-controller-1" }
    - { ip: "192.168.56.12", hostname: "k8s-controller-2" }
    - { ip: "192.168.56.13", hostname: "k8s-controller-3" }
    - { ip: "192.168.56.21", hostname: "k8s-worker-1" }
    - { ip: "192.168.56.22", hostname: "k8s-worker-2" }
    - { ip: "192.168.57.23", hostname: "k8s-worker-3" }
    - { ip: "192.168.56.100", hostname: "k8s-router" }
    - { ip: "192.168.58.10", hostname: "k8s-client" }
  become: true
  when:
    - "'Client' in group_names"

- name: Remote SSH key scan
  connection: local
  command: /usr/bin/ssh-keyscan -t rsa {{ hostname }}
  retries: 3
  delay: 1
  register: remote_ssh_key

- name: Add ansible_host to known_hosts
  connection: local
  known_hosts:
    name: "{{ hostname }}"
    key: "{{ item }}"
  with_items:
    - "{{ remote_ssh_key.stdout_lines }}"

- name: Remote SSH key scan
  connection: local
  command: /usr/bin/ssh-keyscan -t rsa {{ ansible_host }}
  register: remote_ssh_key

- name: Add ansible_host to known_hosts
  connection: local
  known_hosts:
    name: "{{ ansible_host }}"
    key: "{{ item }}"
  with_items:
    - "{{ remote_ssh_key.stdout_lines }}"

- name: SSH keygen
  connection: local
  shell: "ssh-keygen -q -b 2048 -t rsa -N '' -f ~/.ssh/id_rsa <<< y"
  ignore_errors: yes
  when:
    - "'Client' in group_names"

- name: Read id_rsa.pub
  connection: local
  command: "cat ~/.ssh/id_rsa.pub"
  register: id_rsa_pub

- name: Add remote authorized_keys
  lineinfile:
    dest: ~/.ssh/authorized_keys
    line: " {{id_rsa_pub.stdout}}"
